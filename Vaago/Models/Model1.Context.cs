//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vaago.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class HMS2Entities : DbContext
    {
        public HMS2Entities()
            : base("name=HMS2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Guest> Guests { get; set; }
        public DbSet<Reservation> Reservations { get; set; }
        public DbSet<Room> Rooms { get; set; }
        public DbSet<Room_Type> Room_Type { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<System_Admin> System_Admin { get; set; }
    
        public virtual int DeleteCustomer(Nullable<int> customer_id)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", customer_idParameter);
        }
    
        public virtual int deleteGuest(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteGuest", idParameter);
        }
    
        public virtual int deleteReserve(Nullable<int> r_Id)
        {
            var r_IdParameter = r_Id.HasValue ?
                new ObjectParameter("R_Id", r_Id) :
                new ObjectParameter("R_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteReserve", r_IdParameter);
        }
    
        public virtual int deleteRoom(Nullable<int> room_Id)
        {
            var room_IdParameter = room_Id.HasValue ?
                new ObjectParameter("Room_Id", room_Id) :
                new ObjectParameter("Room_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteRoom", room_IdParameter);
        }
    
        public virtual int deleteRoomType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteRoomType", iDParameter);
        }
    
        public virtual int InsertCustomer(string fist_Name, string last_Name, string phone, string cNIC, string gender, string email, string address, string isReserved, string guest_Status, string isRegistered)
        {
            var fist_NameParameter = fist_Name != null ?
                new ObjectParameter("Fist_Name", fist_Name) :
                new ObjectParameter("Fist_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var isReservedParameter = isReserved != null ?
                new ObjectParameter("IsReserved", isReserved) :
                new ObjectParameter("IsReserved", typeof(string));
    
            var guest_StatusParameter = guest_Status != null ?
                new ObjectParameter("Guest_Status", guest_Status) :
                new ObjectParameter("Guest_Status", typeof(string));
    
            var isRegisteredParameter = isRegistered != null ?
                new ObjectParameter("IsRegistered", isRegistered) :
                new ObjectParameter("IsRegistered", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomer", fist_NameParameter, last_NameParameter, phoneParameter, cNICParameter, genderParameter, emailParameter, addressParameter, isReservedParameter, guest_StatusParameter, isRegisteredParameter);
        }
    
        public virtual int InsertGuest(string members, string adults, string child, string phone, string customer_Id)
        {
            var membersParameter = members != null ?
                new ObjectParameter("Members", members) :
                new ObjectParameter("Members", typeof(string));
    
            var adultsParameter = adults != null ?
                new ObjectParameter("Adults", adults) :
                new ObjectParameter("Adults", typeof(string));
    
            var childParameter = child != null ?
                new ObjectParameter("Child", child) :
                new ObjectParameter("Child", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var customer_IdParameter = customer_Id != null ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGuest", membersParameter, adultsParameter, childParameter, phoneParameter, customer_IdParameter);
        }
    
        public virtual int insertReserve(string d_Date, string a_Date, string room_No, string customer_Id, string noOfPerson)
        {
            var d_DateParameter = d_Date != null ?
                new ObjectParameter("D_Date", d_Date) :
                new ObjectParameter("D_Date", typeof(string));
    
            var a_DateParameter = a_Date != null ?
                new ObjectParameter("A_Date", a_Date) :
                new ObjectParameter("A_Date", typeof(string));
    
            var room_NoParameter = room_No != null ?
                new ObjectParameter("Room_No", room_No) :
                new ObjectParameter("Room_No", typeof(string));
    
            var customer_IdParameter = customer_Id != null ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(string));
    
            var noOfPersonParameter = noOfPerson != null ?
                new ObjectParameter("NoOfPerson", noOfPerson) :
                new ObjectParameter("NoOfPerson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertReserve", d_DateParameter, a_DateParameter, room_NoParameter, customer_IdParameter, noOfPersonParameter);
        }
    
        public virtual int insertRoom(string room_No, string room_Status, string adminId, string room_Type_Id, string isClean)
        {
            var room_NoParameter = room_No != null ?
                new ObjectParameter("Room_No", room_No) :
                new ObjectParameter("Room_No", typeof(string));
    
            var room_StatusParameter = room_Status != null ?
                new ObjectParameter("Room_Status", room_Status) :
                new ObjectParameter("Room_Status", typeof(string));
    
            var adminIdParameter = adminId != null ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(string));
    
            var room_Type_IdParameter = room_Type_Id != null ?
                new ObjectParameter("Room_Type_Id", room_Type_Id) :
                new ObjectParameter("Room_Type_Id", typeof(string));
    
            var isCleanParameter = isClean != null ?
                new ObjectParameter("IsClean", isClean) :
                new ObjectParameter("IsClean", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertRoom", room_NoParameter, room_StatusParameter, adminIdParameter, room_Type_IdParameter, isCleanParameter);
        }
    
        public virtual int insertRoomType(string name, string capacity, string room_Price, string max_Guest, string admin_ID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var capacityParameter = capacity != null ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(string));
    
            var room_PriceParameter = room_Price != null ?
                new ObjectParameter("Room_Price", room_Price) :
                new ObjectParameter("Room_Price", typeof(string));
    
            var max_GuestParameter = max_Guest != null ?
                new ObjectParameter("Max_Guest", max_Guest) :
                new ObjectParameter("Max_Guest", typeof(string));
    
            var admin_IDParameter = admin_ID != null ?
                new ObjectParameter("Admin_ID", admin_ID) :
                new ObjectParameter("Admin_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertRoomType", nameParameter, capacityParameter, room_PriceParameter, max_GuestParameter, admin_IDParameter);
        }
    
        public virtual ObjectResult<SelectCustomer_Result> SelectCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCustomer_Result>("SelectCustomer");
        }
    
        public virtual ObjectResult<selectReserve_Result> selectReserve()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectReserve_Result>("selectReserve");
        }
    
        public virtual ObjectResult<selectReserve_byid_Result> selectReserve_byid(Nullable<int> r_Id)
        {
            var r_IdParameter = r_Id.HasValue ?
                new ObjectParameter("R_Id", r_Id) :
                new ObjectParameter("R_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectReserve_byid_Result>("selectReserve_byid", r_IdParameter);
        }
    
        public virtual ObjectResult<selectReserveD_Result> selectReserveD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectReserveD_Result>("selectReserveD");
        }
    
        public virtual ObjectResult<selectRoom_Result> selectRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoom_Result>("selectRoom");
        }
    
        public virtual ObjectResult<selectRoom_byid_Result> selectRoom_byid(Nullable<int> room_Id)
        {
            var room_IdParameter = room_Id.HasValue ?
                new ObjectParameter("Room_Id", room_Id) :
                new ObjectParameter("Room_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoom_byid_Result>("selectRoom_byid", room_IdParameter);
        }
    
        public virtual ObjectResult<selectRoomType_Result> selectRoomType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoomType_Result>("selectRoomType");
        }
    
        public virtual ObjectResult<selectRoomType_byid_Result> selectRoomType_byid(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoomType_byid_Result>("selectRoomType_byid", iDParameter);
        }
    
        public virtual ObjectResult<show_record_Result> show_record(Nullable<int> customer_Id)
        {
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<show_record_Result>("show_record", customer_IdParameter);
        }
    
        public virtual ObjectResult<showGuest_Result> showGuest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showGuest_Result>("showGuest");
        }
    
        public virtual ObjectResult<showGuest_byid_Result> showGuest_byid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showGuest_byid_Result>("showGuest_byid", idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateCustomer(Nullable<int> customer_id, string fist_Name, string last_Name, string phone, string cNIC, string gender, string email, string address, string isResereved, string guest_Status, string isRegistered)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            var fist_NameParameter = fist_Name != null ?
                new ObjectParameter("Fist_Name", fist_Name) :
                new ObjectParameter("Fist_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var isReserevedParameter = isResereved != null ?
                new ObjectParameter("IsResereved", isResereved) :
                new ObjectParameter("IsResereved", typeof(string));
    
            var guest_StatusParameter = guest_Status != null ?
                new ObjectParameter("Guest_Status", guest_Status) :
                new ObjectParameter("Guest_Status", typeof(string));
    
            var isRegisteredParameter = isRegistered != null ?
                new ObjectParameter("IsRegistered", isRegistered) :
                new ObjectParameter("IsRegistered", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", customer_idParameter, fist_NameParameter, last_NameParameter, phoneParameter, cNICParameter, genderParameter, emailParameter, addressParameter, isReserevedParameter, guest_StatusParameter, isRegisteredParameter);
        }
    
        public virtual int updateGuest(Nullable<int> id, Nullable<int> members, Nullable<int> adults, Nullable<int> child, string phone, Nullable<int> customer_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var membersParameter = members.HasValue ?
                new ObjectParameter("Members", members) :
                new ObjectParameter("Members", typeof(int));
    
            var adultsParameter = adults.HasValue ?
                new ObjectParameter("Adults", adults) :
                new ObjectParameter("Adults", typeof(int));
    
            var childParameter = child.HasValue ?
                new ObjectParameter("Child", child) :
                new ObjectParameter("Child", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateGuest", idParameter, membersParameter, adultsParameter, childParameter, phoneParameter, customer_IdParameter);
        }
    
        public virtual int updateReserve(Nullable<int> r_Id, string d_Date, string a_Date, string room_No, string customer_Id, string noOfPerson)
        {
            var r_IdParameter = r_Id.HasValue ?
                new ObjectParameter("R_Id", r_Id) :
                new ObjectParameter("R_Id", typeof(int));
    
            var d_DateParameter = d_Date != null ?
                new ObjectParameter("D_Date", d_Date) :
                new ObjectParameter("D_Date", typeof(string));
    
            var a_DateParameter = a_Date != null ?
                new ObjectParameter("A_Date", a_Date) :
                new ObjectParameter("A_Date", typeof(string));
    
            var room_NoParameter = room_No != null ?
                new ObjectParameter("Room_No", room_No) :
                new ObjectParameter("Room_No", typeof(string));
    
            var customer_IdParameter = customer_Id != null ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(string));
    
            var noOfPersonParameter = noOfPerson != null ?
                new ObjectParameter("NoOfPerson", noOfPerson) :
                new ObjectParameter("NoOfPerson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateReserve", r_IdParameter, d_DateParameter, a_DateParameter, room_NoParameter, customer_IdParameter, noOfPersonParameter);
        }
    
        public virtual int updateRoom(Nullable<int> room_Id, string room_No, string room_Status, string adminId, string room_Type_Id, string isClean)
        {
            var room_IdParameter = room_Id.HasValue ?
                new ObjectParameter("Room_Id", room_Id) :
                new ObjectParameter("Room_Id", typeof(int));
    
            var room_NoParameter = room_No != null ?
                new ObjectParameter("Room_No", room_No) :
                new ObjectParameter("Room_No", typeof(string));
    
            var room_StatusParameter = room_Status != null ?
                new ObjectParameter("Room_Status", room_Status) :
                new ObjectParameter("Room_Status", typeof(string));
    
            var adminIdParameter = adminId != null ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(string));
    
            var room_Type_IdParameter = room_Type_Id != null ?
                new ObjectParameter("Room_Type_Id", room_Type_Id) :
                new ObjectParameter("Room_Type_Id", typeof(string));
    
            var isCleanParameter = isClean != null ?
                new ObjectParameter("IsClean", isClean) :
                new ObjectParameter("IsClean", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateRoom", room_IdParameter, room_NoParameter, room_StatusParameter, adminIdParameter, room_Type_IdParameter, isCleanParameter);
        }
    
        public virtual int updateRoomType(Nullable<int> iD, string name, string capacity, string room_Price, string max_Guest, string admin_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var capacityParameter = capacity != null ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(string));
    
            var room_PriceParameter = room_Price != null ?
                new ObjectParameter("Room_Price", room_Price) :
                new ObjectParameter("Room_Price", typeof(string));
    
            var max_GuestParameter = max_Guest != null ?
                new ObjectParameter("Max_Guest", max_Guest) :
                new ObjectParameter("Max_Guest", typeof(string));
    
            var admin_IDParameter = admin_ID != null ?
                new ObjectParameter("Admin_ID", admin_ID) :
                new ObjectParameter("Admin_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateRoomType", iDParameter, nameParameter, capacityParameter, room_PriceParameter, max_GuestParameter, admin_IDParameter);
        }
    }
}
